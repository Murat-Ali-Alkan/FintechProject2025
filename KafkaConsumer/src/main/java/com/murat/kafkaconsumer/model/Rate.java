package com.murat.kafkaconsumer.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalDateTime;



/**
 * Represents an exchange rate entity stored in the database.
 *
 * <p>This entity contains information about a specific rate,
 * including its name, bid/ask values, the time the rate was updated externally,
 * and the time it was stored in the database.</p>
 *
 * <p>It is mapped to the "rates" table in the database.</p>
 *
 * <p>Uses Lombok annotations to generate constructors, getters, setters,
 * and other utility methods.</p>
 *
 */
@AllArgsConstructor
@NoArgsConstructor
@Data
@Entity
@Table(name="rates")
public class Rate {

    /**
     * The unique identifier for the rate.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the rate (e.g., "USD/EUR").
     */
    @Column(name = "rate_name")
    private String rateName;

    /**
     * The bid value of the rate.
     */
    private double bid;

    /**
     * The ask value of the rate.
     */
    private double ask;

    /**
     * The timestamp representing the time the rate created externally.
     */
    @Column(name="rate_update_time")
    private String timestamp;

    /**
     * The timestamp representing when the rate entry was stored in the database.
     * Automatically set at creation.
     */
    @Column(name="db_update_time")
    private Timestamp dbUpdateTime;


    /**
     * Sets the {@code dbUpdateTime} field to the current system time
     * right before the entity is persisted to the database.
     */
    @PrePersist
    protected void onCreate() {
        dbUpdateTime = new Timestamp(System.currentTimeMillis());
    }


}
